function bellman_ford(e,n){for(var t in e.nodes)e.nodes[t].distance=1/0;n.distance=0,step("Initially, all distances are infinite and all predecessors are null.");for(var r=1;r<e.nodes.length;r++)for(var i in e.edges){var o=e.edges[i];o.source.distance+o.weight<o.target.distance&&(step("Relax edge between "+o.source.id+" and "+o.target.id+"."),o.target.distance=o.source.distance+o.weight,o.target.predecessor=o.source),o.style.directed||o.target.distance+o.weight<o.source.distance&&(e.snapShot("Relax edge between "+o.target.id+" and "+o.source.id+"."),o.source.distance=o.target.distance+o.weight,o.source.predecessor=o.target)}step("Ready.")}function dijkstra(n,t){for(var r in n.nodes)n.nodes[r].distance=1/0;n.snapShot("Initially, all distances are infinite and all predecessors are null."),t.distance=0;for(var i,o=new BinaryMinHeap(n.nodes,"distance");void 0!=o.min();){if(i=o.extractMin(),i.optimized=!0,1/0==i.distance)throw"Orphaned node!";for(e in i.edges){var a=i==i.edges[e].target?i.edges[e].source:i.edges[e].target;if(!a.optimized){var s=i.distance+i.edges[e].weight;s<a.distance&&(a.distance=s,o.heapify(),a.predecessor=i,n.snapShot("Enhancing node."))}}}}function floyd_warshall(n){{var t=[],r=[];n.nodes.length}for(j in n.nodes){t[j]=[],r[j]=[];for(i in n.nodes)t[j][i]=j==i?0:1/0}for(e in n.edges)t[n.edges[e].source.id][n.edges[e].target.id]=n.edges[e].weight;for(k in n.nodes)for(i in n.nodes)for(j in n.nodes)t[i][j]>t[i][k]+t[k][j]&&(t[i][j]=t[i][k]+t[k][j],r[i][j]=k)}function edmonds_karp(){}function BinaryMinHeap(e,n){function t(e){for(var t=a(e);t>=0&&o[e][n]<o[t][n];)o[e]=o.splice(t,1,o[e])[0],e=t,t=a(e)}function r(e){for(var t=c(e),r=s(e);o[t]&&o[e][n]>o[t][n]||o[r]&&o[e][n]>o[r][n];){var i=o[t]&&o[r]&&o[t][n]>o[r][n]?r:t;o[e]=o.splice(i,1,o[e])[0],e=i,t=c(e),r=s(e)}}var o=[],n=n||"key",a=function(e){return Math.floor((e-1)/2)},s=function(e){return 2*e+2},c=function(e){return 2*e+1};this.insert=function(e){void 0==e[n]&&(e={key:e}),o.push(e),t(o.length-1)},this.min=function(){return 1==o.length?void 0:o[0]},this.extractMin=function(){var e=this.min();return 1==o.length&&(o=[])||(o[0]=o.pop())&&r(0),e},this.changeKey=function(){throw"function not implemented"},this.heapify=function(){for(var e=Math.floor((o.length-2)/2);e>=0;e--)r(e)};for(i in e||[])this.insert(e[i])}function quickSort(e){if(e.length<=1)return e;var n=e[Math.floor(Math.random()*e.length)],t=[],r=[],i=[];for(var o in e)e[o]<n&&t.push(e[o]),e[o]==n&&r.push(e[o]),e[o]>n&&i.push(e[o]);return quickSort(t).concat(r).concat(quickSort(i))}function selectionSort(e){if(1==e.length)return e;var n,t=1/0;for(var r in e)e[r]<t&&(t=e[r],n=r);return e.splice(n,1),[t].concat(selectionSort(e))}function mergeSort(e){function n(e,n){for(var t=[];e.length>0||n.length>0;){var r=e.length>0&&n.length>0?e[0]<n[0]?e.shift():n.shift():n.length>0?n.shift():e.length>0?e.shift():null;null!=r&&t.push(r)}return t}median=Math.floor(e.length/2);var t=e.slice(0,median),r=e.slice(median-e.length);return e.length<=1?e:n(mergeSort(t),mergeSort(r))}function RedBlackTree(){}function BTree(){}function NaryTree(){}function kmp(e,n){function t(e){var n=[0],t=0;for(i=1;i<e.length;i++){for(;t>0&&e.charAt(t)!=e.charAt(i);)t=n[t-1];e.charAt(t)==e.charAt(i)&&t++,n[i]=t}return n}for(var r=t(e),i=0,o=[],a=0;a<n.length;a++){for(;i>0&&e.charAt(i)!=n.charAt(a);)i=r[i];e.charAt(i)==n.charAt(a)&&i++,i==e.length&&o.push(a-e.length)&&(i=r[i])}return o}function step(e,n){n()}function curry(e){return function(){var n=curry.args(arguments),t=arguments.callee,r=this;return n.length>=e.length?e.apply(r,n):function(){return t.apply(r,n.concat(curry.args(arguments)))}}}function topological_sort(e){for(i in e.nodes)e.nodes[i].deleted=!1;var n=topological_sort_helper(e);for(i in e.nodes)delete e.nodes[i].deleted;return n}function topological_sort_helper(e){var n;for(i in e.nodes)if(!e.nodes[i].deleted){var t=!1;for(j in e.nodes[i].edges)if(e.nodes[i].edges[j].target==e.nodes[i]&&0==e.nodes[i].edges[j].source.deleted){t=!0;break}if(!t){n=e.nodes[i];break}}if(void 0==n)return[];n.deleted=!0;var r=topological_sort_helper(e);return r.unshift(n),r}curry.args=function(e){return Array.prototype.slice.call(e)},Function.prototype.curry=function(){return curry(this)};